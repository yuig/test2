package com.amazonaws.regions;

import com.amazonaws.logging.Log;
import com.amazonaws.logging.LogFactory;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Iterator;
import jq.b;

/* loaded from: classes3.dex */
public abstract class RegionUtils {

    /* renamed from: a, reason: collision with root package name */
    public static ArrayList f28760a;

    /* renamed from: b, reason: collision with root package name */
    public static final Log f28761b = LogFactory.b("com.amazonaws.request");

    public static Region a(String str) {
        ArrayList arrayList;
        synchronized (RegionUtils.class) {
            try {
                if (f28760a == null) {
                    c();
                }
                arrayList = f28760a;
            } catch (Throwable th3) {
                throw th3;
            }
        }
        Iterator it = arrayList.iterator();
        while (it.hasNext()) {
            Region region = (Region) it.next();
            if (region.f28755a.equals(str)) {
                return region;
            }
        }
        return null;
    }

    public static URI b(String str) {
        try {
            URI uri = new URI(str);
            if (uri.getHost() != null) {
                return uri;
            }
            return new URI("http://" + str);
        } catch (URISyntaxException e13) {
            throw new RuntimeException("Unable to parse service endpoint: " + e13.getMessage());
        }
    }

    public static synchronized void c() {
        synchronized (RegionUtils.class) {
            if (System.getProperty("com.amazonaws.regions.RegionUtils.fileOverride") != null) {
                try {
                    e();
                } catch (FileNotFoundException e13) {
                    throw new RuntimeException("Couldn't find regions override file specified", e13);
                }
            }
            if (f28760a == null) {
                d();
            }
            if (f28760a == null) {
                throw new RuntimeException("Failed to initialize the regions.");
            }
        }
    }

    public static void d() {
        Log log = f28761b;
        if (log.b()) {
            log.f("Initializing the regions with default regions");
        }
        ArrayList arrayList = new ArrayList();
        Region b13 = b.b("af-south-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b13, "autoscaling", "autoscaling.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "dynamodb", "dynamodb.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "ec2", "ec2.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "elasticloadbalancing", "elasticloadbalancing.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "kms", "kms.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "lambda", "lambda.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "logs", "logs.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "s3", "s3.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "sns", "sns.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "sqs", "sqs.af-south-1.amazonaws.com");
        RegionDefaults.a(b13, "sts", "sts.af-south-1.amazonaws.com");
        Region b14 = b.b("ap-northeast-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b14, "autoscaling", "autoscaling.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "cognito-identity", "cognito-identity.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "cognito-idp", "cognito-idp.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "cognito-sync", "cognito-sync.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "data.iot", "data.iot.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "dynamodb", "dynamodb.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "ec2", "ec2.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "elasticloadbalancing", "elasticloadbalancing.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "firehose", "firehose.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "iot", "iot.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "kinesis", "kinesis.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "kms", "kms.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "lambda", "lambda.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "logs", "logs.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "polly", "polly.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "s3", "s3.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "sdb", "sdb.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "sns", "sns.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "sqs", "sqs.ap-northeast-1.amazonaws.com");
        RegionDefaults.a(b14, "sts", "sts.ap-northeast-1.amazonaws.com");
        Region b15 = b.b("ap-northeast-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b15, "autoscaling", "autoscaling.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "cognito-identity", "cognito-identity.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "cognito-idp", "cognito-idp.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "cognito-sync", "cognito-sync.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "data.iot", "data.iot.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "dynamodb", "dynamodb.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "ec2", "ec2.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "elasticloadbalancing", "elasticloadbalancing.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "iot", "iot.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "kinesis", "kinesis.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "kms", "kms.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "lambda", "lambda.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "logs", "logs.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "polly", "polly.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "s3", "s3.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "sns", "sns.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "sqs", "sqs.ap-northeast-2.amazonaws.com");
        RegionDefaults.a(b15, "sts", "sts.ap-northeast-2.amazonaws.com");
        Region b16 = b.b("ap-south-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b16, "autoscaling", "autoscaling.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "cognito-identity", "cognito-identity.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "cognito-idp", "cognito-idp.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "cognito-sync", "cognito-sync.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "dynamodb", "dynamodb.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "ec2", "ec2.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "elasticloadbalancing", "elasticloadbalancing.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "kinesis", "kinesis.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "kms", "kms.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "lambda", "lambda.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "logs", "logs.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "polly", "polly.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "s3", "s3.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "sns", "sns.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "sqs", "sqs.ap-south-1.amazonaws.com");
        RegionDefaults.a(b16, "sts", "sts.ap-south-1.amazonaws.com");
        Region b17 = b.b("ap-southeast-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b17, "autoscaling", "autoscaling.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "cognito-identity", "cognito-identity.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "cognito-idp", "cognito-idp.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "cognito-sync", "cognito-sync.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "data.iot", "data.iot.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "dynamodb", "dynamodb.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "ec2", "ec2.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "elasticloadbalancing", "elasticloadbalancing.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "iot", "iot.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "kinesis", "kinesis.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "kms", "kms.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "lambda", "lambda.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "logs", "logs.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "polly", "polly.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "s3", "s3.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "sdb", "sdb.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "sns", "sns.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "sqs", "sqs.ap-southeast-1.amazonaws.com");
        RegionDefaults.a(b17, "sts", "sts.ap-southeast-1.amazonaws.com");
        Region b18 = b.b("ap-southeast-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b18, "autoscaling", "autoscaling.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "cognito-identity", "cognito-identity.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "cognito-idp", "cognito-idp.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "cognito-sync", "cognito-sync.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "data.iot", "data.iot.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "dynamodb", "dynamodb.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "ec2", "ec2.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "elasticloadbalancing", "elasticloadbalancing.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "iot", "iot.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "kinesis", "kinesis.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "kms", "kms.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "lambda", "lambda.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "logs", "logs.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "polly", "polly.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "s3", "s3.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "sdb", "sdb.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "sns", "sns.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "sqs", "sqs.ap-southeast-2.amazonaws.com");
        RegionDefaults.a(b18, "sts", "sts.ap-southeast-2.amazonaws.com");
        Region b19 = b.b("ca-central-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b19, "autoscaling", "autoscaling.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "dynamodb", "dynamodb.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "ec2", "ec2.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "elasticloadbalancing", "elasticloadbalancing.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "kinesis", "kinesis.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "kms", "kms.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "lambda", "lambda.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "logs", "logs.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "polly", "polly.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "s3", "s3.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "sns", "sns.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "sqs", "sqs.ca-central-1.amazonaws.com");
        RegionDefaults.a(b19, "sts", "sts.ca-central-1.amazonaws.com");
        Region b23 = b.b("eu-central-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b23, "autoscaling", "autoscaling.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "cognito-identity", "cognito-identity.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "cognito-idp", "cognito-idp.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "cognito-sync", "cognito-sync.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "data.iot", "data.iot.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "dynamodb", "dynamodb.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "ec2", "ec2.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "elasticloadbalancing", "elasticloadbalancing.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "firehose", "firehose.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "iot", "iot.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "kinesis", "kinesis.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "kms", "kms.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "lambda", "lambda.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "logs", "logs.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "polly", "polly.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "s3", "s3.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "sns", "sns.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "sqs", "sqs.eu-central-1.amazonaws.com");
        RegionDefaults.a(b23, "sts", "sts.eu-central-1.amazonaws.com");
        Region b24 = b.b("eu-central-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b24, "autoscaling", "autoscaling.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "cognito-identity", "cognito-identity.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "cognito-idp", "cognito-idp.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "cognito-sync", "cognito-sync.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "data.iot", "data.iot.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "dynamodb", "dynamodb.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "ec2", "ec2.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "elasticloadbalancing", "elasticloadbalancing.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "firehose", "firehose.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "iot", "iot.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "kinesis", "kinesis.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "kms", "kms.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "lambda", "lambda.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "logs", "logs.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "polly", "polly.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "s3", "s3.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "sdb", "sdb.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "sns", "sns.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "sqs", "sqs.eu-central-2.amazonaws.com");
        RegionDefaults.a(b24, "sts", "sts.eu-central-2.amazonaws.com");
        Region b25 = b.b("eu-south-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b25, "autoscaling", "autoscaling.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "dynamodb", "dynamodb.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "ec2", "ec2.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "elasticloadbalancing", "elasticloadbalancing.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "lambda", "lambda.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "logs", "logs.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "s3", "s3.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "sns", "sns.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "sqs", "sqs.eu-south-1.amazonaws.com");
        RegionDefaults.a(b25, "sts", "sts.eu-south-1.amazonaws.com");
        Region b26 = b.b("eu-south-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b26, "autoscaling", "autoscaling.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "cognito-identity", "cognito-identity.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "cognito-idp", "cognito-idp.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "cognito-sync", "cognito-sync.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "data.iot", "data.iot.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "dynamodb", "dynamodb.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "ec2", "ec2.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "elasticloadbalancing", "elasticloadbalancing.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "firehose", "firehose.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "iot", "iot.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "kinesis", "kinesis.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "kms", "kms.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "lambda", "lambda.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "logs", "logs.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "polly", "polly.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "s3", "s3.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "sdb", "sdb.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "sns", "sns.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "sqs", "sqs.eu-south-2.amazonaws.com");
        RegionDefaults.a(b26, "sts", "sts.eu-south-2.amazonaws.com");
        Region b27 = b.b("eu-west-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b27, "autoscaling", "autoscaling.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "cognito-identity", "cognito-identity.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "cognito-idp", "cognito-idp.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "cognito-sync", "cognito-sync.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "data.iot", "data.iot.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "dynamodb", "dynamodb.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "ec2", "ec2.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "elasticloadbalancing", "elasticloadbalancing.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "email", "email.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "firehose", "firehose.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "iot", "iot.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "kinesis", "kinesis.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "kms", "kms.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "lambda", "lambda.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "logs", "logs.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "machinelearning", "machinelearning.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "polly", "polly.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "rekognition", "rekognition.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "s3", "s3.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "sdb", "sdb.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "sns", "sns.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "sqs", "sqs.eu-west-1.amazonaws.com");
        RegionDefaults.a(b27, "sts", "sts.eu-west-1.amazonaws.com");
        Region b28 = b.b("eu-west-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b28, "autoscaling", "autoscaling.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "cognito-identity", "cognito-identity.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "cognito-idp", "cognito-idp.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "cognito-sync", "cognito-sync.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "dynamodb", "dynamodb.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "ec2", "ec2.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "elasticloadbalancing", "elasticloadbalancing.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "iot", "iot.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "kinesis", "kinesis.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "kms", "kms.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "lambda", "lambda.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "logs", "logs.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "polly", "polly.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "s3", "s3.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "sns", "sns.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "sqs", "sqs.eu-west-2.amazonaws.com");
        RegionDefaults.a(b28, "sts", "sts.eu-west-2.amazonaws.com");
        Region b29 = b.b("eu-west-3", "amazonaws.com", arrayList);
        RegionDefaults.a(b29, "autoscaling", "autoscaling.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "dynamodb", "dynamodb.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "ec2", "ec2.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "elasticloadbalancing", "elasticloadbalancing.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "kinesis", "kinesis.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "kms", "kms.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "lambda", "lambda.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "logs", "logs.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "polly", "polly.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "s3", "s3.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "sns", "sns.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "sqs", "sqs.eu-west-3.amazonaws.com");
        RegionDefaults.a(b29, "sts", "sts.eu-west-3.amazonaws.com");
        Region b33 = b.b("sa-east-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b33, "autoscaling", "autoscaling.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "dynamodb", "dynamodb.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "ec2", "ec2.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "elasticloadbalancing", "elasticloadbalancing.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "kinesis", "kinesis.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "kms", "kms.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "lambda", "lambda.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "logs", "logs.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "polly", "polly.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "s3", "s3.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "sdb", "sdb.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "sns", "sns.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "sqs", "sqs.sa-east-1.amazonaws.com");
        RegionDefaults.a(b33, "sts", "sts.sa-east-1.amazonaws.com");
        Region b34 = b.b("us-east-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b34, "autoscaling", "autoscaling.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "cognito-identity", "cognito-identity.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "cognito-idp", "cognito-idp.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "cognito-sync", "cognito-sync.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "data.iot", "data.iot.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "dynamodb", "dynamodb.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "ec2", "ec2.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "elasticloadbalancing", "elasticloadbalancing.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "email", "email.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "firehose", "firehose.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "iot", "iot.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "kinesis", "kinesis.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "kms", "kms.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "lambda", "lambda.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "logs", "logs.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "machinelearning", "machinelearning.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "mobileanalytics", "mobileanalytics.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "pinpoint", "pinpoint.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "polly", "polly.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "rekognition", "rekognition.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "s3", "s3.amazonaws.com");
        RegionDefaults.a(b34, "sdb", "sdb.amazonaws.com");
        RegionDefaults.a(b34, "sns", "sns.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "sqs", "sqs.us-east-1.amazonaws.com");
        RegionDefaults.a(b34, "sts", "sts.us-east-1.amazonaws.com");
        Region b35 = b.b("us-east-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b35, "autoscaling", "autoscaling.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "cognito-identity", "cognito-identity.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "cognito-idp", "cognito-idp.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "cognito-sync", "cognito-sync.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "dynamodb", "dynamodb.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "ec2", "ec2.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "elasticloadbalancing", "elasticloadbalancing.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "firehose", "firehose.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "iot", "iot.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "kinesis", "kinesis.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "kms", "kms.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "lambda", "lambda.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "logs", "logs.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "polly", "polly.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "s3", "s3.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "sns", "sns.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "sqs", "sqs.us-east-2.amazonaws.com");
        RegionDefaults.a(b35, "sts", "sts.us-east-2.amazonaws.com");
        Region b36 = b.b("us-west-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b36, "autoscaling", "autoscaling.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "dynamodb", "dynamodb.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "ec2", "ec2.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "elasticloadbalancing", "elasticloadbalancing.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "kinesis", "kinesis.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "kms", "kms.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "lambda", "lambda.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "logs", "logs.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "polly", "polly.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "s3", "s3.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "sdb", "sdb.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "sns", "sns.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "sqs", "sqs.us-west-1.amazonaws.com");
        RegionDefaults.a(b36, "sts", "sts.us-west-1.amazonaws.com");
        Region b37 = b.b("us-west-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b37, "autoscaling", "autoscaling.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "cognito-identity", "cognito-identity.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "cognito-idp", "cognito-idp.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "cognito-sync", "cognito-sync.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "data.iot", "data.iot.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "dynamodb", "dynamodb.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "ec2", "ec2.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "elasticloadbalancing", "elasticloadbalancing.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "email", "email.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "firehose", "firehose.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "iot", "iot.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "kinesis", "kinesis.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "kms", "kms.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "lambda", "lambda.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "logs", "logs.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "polly", "polly.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "rekognition", "rekognition.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "s3", "s3.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "sdb", "sdb.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "sns", "sns.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "sqs", "sqs.us-west-2.amazonaws.com");
        RegionDefaults.a(b37, "sts", "sts.us-west-2.amazonaws.com");
        Region b38 = b.b("cn-north-1", "amazonaws.com.cn", arrayList);
        RegionDefaults.a(b38, "autoscaling", "autoscaling.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "cognito-identity", "cognito-identity.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "dynamodb", "dynamodb.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "ec2", "ec2.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "elasticloadbalancing", "elasticloadbalancing.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "iot", "iot.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "kinesis", "kinesis.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "lambda", "lambda.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "logs", "logs.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "s3", "s3.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "sns", "sns.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "sqs", "sqs.cn-north-1.amazonaws.com.cn");
        RegionDefaults.a(b38, "sts", "sts.cn-north-1.amazonaws.com.cn");
        Region b39 = b.b("cn-northwest-1", "amazonaws.com.cn", arrayList);
        RegionDefaults.a(b39, "autoscaling", "autoscaling.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "dynamodb", "dynamodb.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "ec2", "ec2.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "elasticloadbalancing", "elasticloadbalancing.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "kinesis", "kinesis.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "logs", "logs.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "s3", "s3.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "sns", "sns.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "sqs", "sqs.cn-northwest-1.amazonaws.com.cn");
        RegionDefaults.a(b39, "sts", "sts.cn-northwest-1.amazonaws.com.cn");
        Region b43 = b.b("us-gov-west-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b43, "autoscaling", "autoscaling.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "dynamodb", "dynamodb.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "ec2", "ec2.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "elasticloadbalancing", "elasticloadbalancing.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "kinesis", "kinesis.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "kms", "kms.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "lambda", "lambda.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "logs", "logs.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "rekognition", "rekognition.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "s3", "s3.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "sns", "sns.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "sqs", "sqs.us-gov-west-1.amazonaws.com");
        RegionDefaults.a(b43, "sts", "sts.us-gov-west-1.amazonaws.com");
        Region b44 = b.b("us-gov-east-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b44, "autoscaling", "autoscaling.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "dynamodb", "dynamodb.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "ec2", "ec2.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "elasticloadbalancing", "elasticloadbalancing.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "kinesis", "kinesis.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "kms", "kms.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "lambda", "lambda.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "logs", "logs.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "rekognition", "rekognition.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "s3", "s3.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "sns", "sns.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "sqs", "sqs.us-gov-east-1.amazonaws.com");
        RegionDefaults.a(b44, "sts", "sts.us-gov-east-1.amazonaws.com");
        Region b45 = b.b("eu-north-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b45, "autoscaling", "autoscaling.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "dynamodb", "dynamodb.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "ec2", "ec2.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "elasticloadbalancing", "elasticloadbalancing.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "firehose", "firehose.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "iot", "iot.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "kinesis", "kinesis.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "kms", "kms.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "lambda", "lambda.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "logs", "logs.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "s3", "s3.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "sns", "sns.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "sqs", "sqs.eu-north-1.amazonaws.com");
        RegionDefaults.a(b45, "sts", "sts.eu-north-1.amazonaws.com");
        Region b46 = b.b("ap-east-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b46, "autoscaling", "autoscaling.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "dynamodb", "dynamodb.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "ec2", "ec2.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "elasticloadbalancing", "elasticloadbalancing.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "firehose", "firehose.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "kinesis", "kinesis.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "kms", "kms.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "lambda", "lambda.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "logs", "logs.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "polly", "polly.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "s3", "s3.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "sns", "sns.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "sqs", "sqs.ap-east-1.amazonaws.com");
        RegionDefaults.a(b46, "sts", "sts.ap-east-1.amazonaws.com");
        Region b47 = b.b("me-south-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b47, "autoscaling", "autoscaling.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "cognito-identity", "cognito-identity.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "cognito-idp", "cognito-idp.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "cognito-sync", "cognito-sync.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "data.iot", "data.iot.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "dynamodb", "dynamodb.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "ec2", "ec2.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "elasticloadbalancing", "elasticloadbalancing.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "firehose", "firehose.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "iot", "iot.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "kinesis", "kinesis.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "kms", "kms.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "lambda", "lambda.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "logs", "logs.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "polly", "polly.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "s3", "s3.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "sdb", "sdb.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "sns", "sns.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "sqs", "sqs.me-south-1.amazonaws.com");
        RegionDefaults.a(b47, "sts", "sts.me-south-1.amazonaws.com");
        Region b48 = b.b("ap-southeast-3", "amazonaws.com", arrayList);
        RegionDefaults.a(b48, "autoscaling", "autoscaling.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "cognito-identity", "cognito-identity.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "cognito-idp", "cognito-idp.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "cognito-sync", "cognito-sync.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "data.iot", "data.iot.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "dynamodb", "dynamodb.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "ec2", "ec2.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "elasticloadbalancing", "elasticloadbalancing.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "firehose", "firehose.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "iot", "iot.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "kinesis", "kinesis.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "kms", "kms.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "lambda", "lambda.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "logs", "logs.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "polly", "polly.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "s3", "s3.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "sdb", "sdb.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "sns", "sns.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "sqs", "sqs.ap-southeast-3.amazonaws.com");
        RegionDefaults.a(b48, "sts", "sts.ap-southeast-3.amazonaws.com");
        Region b49 = b.b("me-central-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b49, "autoscaling", "autoscaling.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "cognito-identity", "cognito-identity.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "cognito-idp", "cognito-idp.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "cognito-sync", "cognito-sync.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "data.iot", "data.iot.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "dynamodb", "dynamodb.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "ec2", "ec2.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "elasticloadbalancing", "elasticloadbalancing.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "firehose", "firehose.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "iot", "iot.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "kinesis", "kinesis.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "kms", "kms.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "lambda", "lambda.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "logs", "logs.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "polly", "polly.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "s3", "s3.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "sdb", "sdb.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "sns", "sns.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "sqs", "sqs.me-central-1.amazonaws.com");
        RegionDefaults.a(b49, "sts", "sts.me-central-1.amazonaws.com");
        Region b53 = b.b("ap-south-2", "amazonaws.com", arrayList);
        RegionDefaults.a(b53, "autoscaling", "autoscaling.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "cognito-identity", "cognito-identity.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "cognito-idp", "cognito-idp.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "cognito-sync", "cognito-sync.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "data.iot", "data.iot.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "dynamodb", "dynamodb.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "ec2", "ec2.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "elasticloadbalancing", "elasticloadbalancing.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "firehose", "firehose.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "iot", "iot.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "kinesis", "kinesis.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "kms", "kms.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "lambda", "lambda.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "logs", "logs.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "polly", "polly.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "s3", "s3.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "sdb", "sdb.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "sns", "sns.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "sqs", "sqs.ap-south-2.amazonaws.com");
        RegionDefaults.a(b53, "sts", "sts.ap-south-2.amazonaws.com");
        Region b54 = b.b("ap-southeast-4", "amazonaws.com", arrayList);
        RegionDefaults.a(b54, "autoscaling", "autoscaling.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "cognito-identity", "cognito-identity.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "cognito-idp", "cognito-idp.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "cognito-sync", "cognito-sync.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "data.iot", "data.iot.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "dynamodb", "dynamodb.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "ec2", "ec2.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "elasticloadbalancing", "elasticloadbalancing.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "firehose", "firehose.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "iot", "iot.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "kinesis", "kinesis.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "kms", "kms.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "lambda", "lambda.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "logs", "logs.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "polly", "polly.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "s3", "s3.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "sdb", "sdb.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "sns", "sns.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "sqs", "sqs.ap-southeast-4.amazonaws.com");
        RegionDefaults.a(b54, "sts", "sts.ap-southeast-4.amazonaws.com");
        Region b55 = b.b("il-central-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b55, "autoscaling", "autoscaling.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "cognito-identity", "cognito-identity.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "cognito-idp", "cognito-idp.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "cognito-sync", "cognito-sync.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "data.iot", "data.iot.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "dynamodb", "dynamodb.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "ec2", "ec2.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "elasticloadbalancing", "elasticloadbalancing.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "firehose", "firehose.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "iot", "iot.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "kinesis", "kinesis.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "kms", "kms.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "lambda", "lambda.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "logs", "logs.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "polly", "polly.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "s3", "s3.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "sdb", "sdb.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "sns", "sns.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "sqs", "sqs.il-central-1.amazonaws.com");
        RegionDefaults.a(b55, "sts", "sts.il-central-1.amazonaws.com");
        Region b56 = b.b("ca-west-1", "amazonaws.com", arrayList);
        RegionDefaults.a(b56, "autoscaling", "autoscaling.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "cognito-identity", "cognito-identity.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "cognito-idp", "cognito-idp.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "cognito-sync", "cognito-sync.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "data.iot", "data.iot.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "dynamodb", "dynamodb.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "ec2", "ec2.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "elasticloadbalancing", "elasticloadbalancing.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "firehose", "firehose.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "iot", "iot.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "kinesis", "kinesis.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "kms", "kms.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "lambda", "lambda.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "logs", "logs.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "polly", "polly.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "s3", "s3.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "sdb", "sdb.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "sns", "sns.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "sqs", "sqs.ca-west-1.amazonaws.com");
        RegionDefaults.a(b56, "sts", "sts.ca-west-1.amazonaws.com");
        f28760a = arrayList;
    }

    public static void e() {
        String property = System.getProperty("com.amazonaws.regions.RegionUtils.fileOverride");
        Log log = f28761b;
        if (log.b()) {
            log.f("Using local override of the regions file (" + property + ") to initiate regions data...");
        }
        FileInputStream fileInputStream = new FileInputStream(new File(property));
        try {
            new RegionMetadataParser();
            f28760a = RegionMetadataParser.b(fileInputStream);
        } catch (Exception e13) {
            log.j("Failed to parse regional endpoints", e13);
        }
    }
}
